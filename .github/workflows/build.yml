name: Deploy to GitHub Pages
on:
  push:
    branches:
      - dev

jobs:
  build:
    name: Build elm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Elm
        uses: justgook/setup-elm@v1

      - name: Set up packages
        run: sudo apt-get install -y webp=0.6.1-2

      - name: Move static files
        run: mv "./src/static" "./build"

      - name: Elm Make
        run: elm make --optimize --output="./bundle.js" src/Main.elm

      - name: Compress js bundle
        run: |
          npx uglify-js@3.7.6 "./bundle.js" --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | npx uglify-js@3.7.6 --mangle --output="./build/bundle.js"
          echo "Size: bundle.js $(du -sk bundle.js | cut -f1) kB"
          echo "Size: build/bundle.js $(du -sk build/bundle.js | cut -f1) kB"

      - name: Inline js bundle into html
        run: npx inline-source-cli@2.0.0 --compress false --root build build/index.html > build/index.html

      - name: Resize and compress images
        run: |
          echo "Size: build/images $(du -sk build/images | cut -f1) kB"
          for filename in $(find ./build/images -name '*.jpg' -or -name '*.png' -or -name '*.gif' -or -name '*.jpeg' -or -name '*.webp'); do convert "$filename" -resize '400x100000>' -quality 80 -define webp:lossless=false -define webp:method=6 -define webp:partitions=3 -define webp:auto-filter=true "$filename"; done
          echo "Size: build/images $(du -sk build/images | cut -f1) kB"

      - name: Deploy build directory to master
        uses: peaceiris/actions-gh-pages@v2.7.0-1
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PUBLISH_BRANCH: master
          PUBLISH_DIR: ./build
        with:
          emptyCommits: false
